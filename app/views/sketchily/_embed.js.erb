<% # This partial requires svgutils.js
   #
   # Clients of this partial must supply the following variables:
   # id
   # value
   # hide_menu
   # hide_image_tool
   # hide_hyperlink_tool %>

var svgCanvas_<%= id %> = null;

function attachSubmitHandler_<%= id %>() {
  $("input#<%= id %>").closest("form").one("submit", function(event) {
    svgCanvas_<%= id %>.getSvgString()(handleSvgData_<%= id %>);
    return false;
  });
}

function handleSvgData_<%= id %>(data, error) {
  if (error) {
    alert('Error: ' + error);
  }
  else {
    $("input#<%= id %>").attr("value", svgedit.utilities.encode64("<?xml version=\"1.0\"?>\n" + data));
    getSvgEditForm().trigger('svgDataHandled');
    attachSubmitHandler_<%= id %>();
  }
}

function getSvgEditForm() {
  return $("input#<%= id %>").closest("form");
}

function initEmbed_<%= id %>() {
  var frame = document.getElementById('svgedit_<%= id %>');
  svgCanvas_<%= id %> = new embedded_svg_edit(frame);
  
  var doc;
  doc = frame.contentDocument;
  if (!doc) {
    doc = frame.contentWindow.document;
  }

  <% if hide_menu %>
    var mainButton = doc.getElementById('main_button');
    mainButton.parentNode.removeChild(mainButton);
    var toolsTop = doc.getElementById('tools_top');
    toolsTop.style.left = '5px';
  <% end %>
  
  <% if hide_image_tool %>
    var imageTool = doc.getElementById('tool_image');
    imageTool.parentNode.removeChild(imageTool);
  <% end %>

  <% if hide_hyperlink_tool %>
    var hyperlinkTool = doc.getElementById('tool_make_link');
    hyperlinkTool.parentNode.removeChild(hyperlinkTool);
  <% end %>

  getSvgEditForm().on('svgDataHandled', function() {
    <% case submit_action[:type]
       when :default %>
         getSvgEditForm().submit();
    <% when :click %>
         $('#<%= submit_action[:button_id] %>').trigger('click');
    <% end %>
  });

  attachSubmitHandler_<%= id %>();

  svgCanvas_<%= id %>.setSvgString(svgedit.utilities.decode64("<%= value.try(:squish) %>"));
}

$("#svgedit_<%= id %>").load(initEmbed_<%= id %>);
